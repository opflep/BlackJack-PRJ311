/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author sonnt
 */
public class LoadingDialog extends javax.swing.JDialog implements Runnable {

    /**
     * Creates new form LoadingDialog
     */
    PlayingBoard parent;

    public LoadingDialog(PlayingBoard parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        Thread t = new Thread(this);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        lblNotif = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        cbxLang = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        cbxLang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Vietnamese", "Japanese" }));
        cbxLang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLangActionPerformed(evt);
            }
        });

        jLabel1.setText("Select language:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(lblNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cbxLang, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblNotif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(cbxLang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        parent.start();
        btnStart.setEnabled(false);
        parent.setRB(getBundle());
        cbxLang.setEnabled(false);
    }//GEN-LAST:event_btnStartActionPerformed
    public ResourceBundle getBundle() {
        Locale locale;
        int i = cbxLang.getSelectedIndex();
        if (i == 1) {
            locale = new Locale("vi", "VN");
            ResourceBundle vn = ResourceBundle.getBundle("resource\\text",locale);
            return vn;
        } else if (i == 2) {
            locale = new Locale("ja", "JP");
            ResourceBundle jp = ResourceBundle.getBundle("resource\\text",locale);
            return jp;
        } else {
            ResourceBundle defaul = ResourceBundle.getBundle("resource\\text");
            return defaul;
        }
}
    private void cbxLangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLangActionPerformed

    }//GEN-LAST:event_cbxLangActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JComboBox<String> cbxLang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lblNotif;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        int steps = 10000 / jProgressBar1.getMaximum();

        for (int i = jProgressBar1.getMinimum(); i < jProgressBar1.getMaximum(); i++) {
            jProgressBar1.setValue(i);
            try {
                Thread.sleep(steps);
            } catch (InterruptedException ex) {
                Logger.getLogger(LoadingDialog.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        lblNotif.setText("Waiting other player...");
        // this.dispose();
    }
}
